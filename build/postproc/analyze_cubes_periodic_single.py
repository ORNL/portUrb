from netCDF4 import Dataset
import matplotlib.pyplot as plt
import numpy as np
from mpl_toolkits.axes_grid1 import make_axes_locatable
import xarray

def get_ind(arr,val) :
  return np.argmin(np.abs(arr-val))

# 37	0.0389419438555131
# 49	0.0393385099143159
# 39	0.0423233843415509
# 24	0.0435317115165478
# 9	0.0463060138483291
# 13	0.0465098664664436
# 22	0.0472114253842437
# 30	0.0478176520389412
# 43	0.047998137981541
# 10	0.0482967380924037
# 38	0.0493429617239851
# 21	0.0496127031452001
# 18	0.0503069826736365
# 25	0.0516548314420079
# 14	0.0522760121933779
# 15	0.0523075135189734
# 45	0.0524153057292052
# 26	0.0530154645331968
# 11	0.0530368350254831
# 12	0.0531157274522937
# 16	0.0531781785714774
# 35	0.053856637976784
# 41	0.054966114497688
# 28	0.0568671984383332
# 44	0.0576474429661537
# 42	0.0577155296726354
# 34	0.0584414519881603
# 36	0.059160374114532
# 40	0.0592494245802765
# 20	0.059358271041769
# 48	0.0598513044324046
# 47	0.0602464787967123
# 27	0.0603857618262801
# 33	0.0616924988677356
# 23	0.0648691219088414
# 29	0.0662052989247839
# 46	0.0702353106298004
# 19	0.0712141300832401
# 32	0.074823664315392
# 17	0.0758842220926636
# 3	0.0801703175746173
# 8	0.0808806596431418
# 4	0.0825081412353255
# 7	0.0842336993772425
# 31	0.0865867635104804
# 6	0.0888594553155806
# 2	0.0927950924095588
# 5	0.0929099162740748
# 1	0.235883523684222

times = [37,49,39,24,9,13,22,30,43,10]
# times = [i for i in range(1,50)]
prefix = "/lustre/storm/nwp501/scratch/imn/cubes_periodic/cubes_periodic_z0-1.000e-07_"
fnames = [f"{prefix}{i:08}.nc" for i in times]

p0_x = np.array([0.390051457975986,\
        0.40377358490566,\
        0.420926243567753,\
        0.439794168096055,\
        0.453516295025729,\
        0.462092624356775,\
        0.472384219554031,\
        0.486106346483705,\
        0.494682675814751,\
        0.503259005145798,\
        0.511835334476844,\
        0.525557461406518,\
        0.534133790737564,\
        0.534133790737564,\
        0.540994854202402,\
        0.549571183533448,\
        0.559862778730703,\
        0.570154373927959,\
        0.577015437392796,\
        0.582161234991424,\
        0.585591766723842])
p0_y = np.array([1.18628571428571,\
        1.23771428571429,\
        1.296,\
        1.392,\
        1.44,\
        1.49485714285714,\
        1.54971428571429,\
        1.59428571428571,\
        1.64228571428571,\
        1.70057142857143,\
        1.752,\
        1.78971428571429,\
        1.84114285714286,\
        1.84114285714286,\
        1.89257142857143,\
        1.94057142857143,\
        1.992,\
        2.04,\
        2.088,\
        2.14285714285714,\
        2.19428571428571])
p1_x = np.array([-0.0355640535372849,\
        -0.0183556405353729,\
        -0.00114722753346083,\
        0.0103250478011472,\
        0.0122370936902486,\
        0.0141491395793499,\
        0.0198852772466539,\
        0.0217973231357552,\
        0.0217973231357552,\
        0.0237093690248566,\
        0.0237093690248566,\
        0.0237093690248566,\
        0.0313575525812619,\
        0.0523900573613766,\
        0.0906309751434034,\
        0.12887189292543,\
        0.169024856596558,\
        0.207265774378585,\
        0.253154875717017,\
        0.320076481835564,\
        0.356405353728489,\
        0.392734225621415,\
        0.419502868068834,\
        0.444359464627151,\
        0.444359464627151,\
        0.469216061185468,\
        0.492160611854684,\
        0.503632887189293,\
        0.526577437858509,\
        0.543785850860421,\
        0.55717017208413,\
        0.574378585086042])
p1_y = np.array([0.252229299363057,\
        0.301910828025478,\
        0.351592356687898,\
        0.401273885350319,\
        0.439490445859873,\
        0.489171974522293,\
        0.538853503184713,\
        0.6,\
        0.653503184713376,\
        0.69171974522293,\
        0.74140127388535,\
        0.78343949044586,\
        0.844585987261147,\
        0.898089171974522,\
        0.943949044585987,\
        0.970700636942675,\
        0.997452229299363,\
        1.02420382165605,\
        1.04713375796178,\
        1.0968152866242,\
        1.15031847133758,\
        1.24203821656051,\
        1.34522292993631,\
        1.44458598726115,\
        1.44458598726115,\
        1.54777070063694,\
        1.64713375796178,\
        1.74649681528662,\
        1.84203821656051,\
        1.94904458598726,\
        2.05222929936306,\
        2.14777070063694])
p2_x = np.array([0.148659003831418,\
        0.162068965517241,\
        0.169731800766283,\
        0.181226053639847,\
        0.19272030651341,\
        0.204214559386973,\
        0.238697318007663,\
        0.273180076628353,\
        0.294252873563218,\
        0.319157088122605,\
        0.361302681992337,\
        0.40536398467433,\
        0.436015325670498,\
        0.468582375478927,\
        0.493486590038314,\
        0.501149425287356,\
        0.531800766283525,\
        0.552873563218391,\
        0.564367816091954,\
        0.579693486590038,\
        0.602681992337165])
p2_y = np.array([0.340996168582375,\
        0.409961685823755,\
        0.494252873563218,\
        0.597701149425287,\
        0.685823754789272,\
        0.781609195402299,\
        0.896551724137931,\
        1,\
        1.03831417624521,\
        1.09195402298851,\
        1.14176245210728,\
        1.24521072796935,\
        1.34865900383142,\
        1.44444444444444,\
        1.54406130268199,\
        1.64367816091954,\
        1.73563218390805,\
        1.83908045977012,\
        1.9272030651341,\
        2.03831417624521,\
        2.13409961685824])
p3_x = np.array([0.0178387650085763,\
        0.0590051457975986,\
        0.0864493996569468,\
        0.115608919382504,\
        0.0950257289879931,\
        0.124185248713551,\
        0.143053173241852,\
        0.14819897084048,\
        0.153344768439108,\
        0.161921097770154,\
        0.179073756432247,\
        0.191080617495712,\
        0.232246998284734,\
        0.251114922813036,\
        0.269982847341338,\
        0.290566037735849,\
        0.307718696397942,\
        0.306003430531732,\
        0.328301886792453,\
        0.343739279588336,\
        0.376329331046312,\
        0.410634648370497,\
        0.436363636363636,\
        0.467238421955403,\
        0.475814751286449,\
        0.49811320754717,\
        0.52041166380789,\
        0.534133790737564,\
        0.556432246998285,\
        0.570154373927959])
p3_y = np.array([0.257142857142857,\
        0.308571428571429,\
        0.325714285714286,\
        0.401142857142857,\
        0.353142857142857,\
        0.449142857142857,\
        0.504,\
        0.558857142857143,\
        0.6,\
        0.641142857142857,\
        0.699428571428571,\
        0.754285714285714,\
        0.850285714285714,\
        0.891428571428571,\
        0.949714285714286,\
        1.00114285714286,\
        1.07314285714286,\
        1.04228571428571,\
        1.09714285714286,\
        1.152,\
        1.25485714285714,\
        1.34742857142857,\
        1.45028571428571,\
        1.55657142857143,\
        1.64914285714286,\
        1.752,\
        1.85142857142857,\
        1.95428571428571,\
        2.05714285714286,\
        2.15657142857143])
uw_p1_x = np.array([0.379746835443038,\
           0.389873417721519,\
           0.754430379746836,\
           0.572151898734177,\
           0.572151898734177,\
           0.622784810126583,\
           -0.0253164556962024,\
           0.19746835443038,\
           0.116455696202532,\
           0.248101265822785,\
           0.237974683544304,\
           0.673417721518987,\
           2.27341772151899,\
           5.66582278481013,\
           6.47594936708861,\
           8.48101265822785,\
           8.38987341772152,\
           8.14683544303798,\
           6.20253164556962,\
           4.46075949367089,\
           4.1873417721519,\
           3.92405063291139,\
           4.12658227848101,\
           3.80253164556962,\
           4.49113924050633,\
           4.29873417721519,\
           4.5620253164557,\
           4.08607594936709,\
           3.8126582278481,\
           5.04810126582279,\
           4.00506329113924])
uw_p1_y = np.array([0.245070422535211,\
           0.349859154929578,\
           0.39887323943662,\
           0.446197183098592,\
           0.501971830985916,\
           0.544225352112676,\
           0.60169014084507,\
           0.643943661971831,\
           0.691267605633803,\
           0.747042253521127,\
           0.804507042253521,\
           0.843380281690141,\
           0.902535211267606,\
           0.943098591549296,\
           0.983661971830986,\
           1.00225352112676,\
           1.02929577464789,\
           1.05464788732394,\
           1.09859154929577,\
           1.15098591549296,\
           1.25239436619718,\
           1.35549295774648,\
           1.45014084507042,\
           1.54816901408451,\
           1.64957746478873,\
           1.74253521126761,\
           1.85577464788732,\
           1.94028169014085,\
           1.95718309859155,\
           2.04676056338028,\
           2.14478873239437])
uw_p3_x = np.array([-0.146835443037975,\
            0.713924050632912,\
            0.734177215189873,\
            1.18987341772152,\
            1.33164556962025,\
            1.64556962025316,\
            2.47594936708861,\
            3.37721518987342,\
            2.99240506329114,\
            3.90379746835443,\
            3.96455696202532,\
            4.76455696202532,\
            5.17974683544304,\
            5.77721518987342,\
            4.85569620253165,\
            5.59493670886076,\
            5.69620253164557,\
            5.69620253164557,\
            5.58481012658228,\
            5.18987341772152,\
            5.52405063291139,\
            4.7746835443038,\
            5.13924050632911,\
            4.67341772151899,\
            4.35949367088608,\
            4.4,\
            4.24810126582279,\
            4.14683544303798,\
            4.1873417721519,\
            4.09620253164557])
uw_p3_y = np.array([0.248450704225352,\
           0.299154929577465,\
           0.322816901408451,\
           0.349859154929578,\
           0.393802816901408,\
           0.459718309859155,\
           0.508732394366197,\
           0.549295774647887,\
           0.603380281690141,\
           0.650704225352113,\
           0.698028169014085,\
           0.757183098591549,\
           0.851830985915493,\
           0.902535211267606,\
           0.968450704225352,\
           0.99887323943662,\
           1.05971830985916,\
           1.08507042253521,\
           1.1087323943662,\
           1.1543661971831,\
           1.25577464788732,\
           1.36225352112676,\
           1.45183098591549,\
           1.55661971830986,\
           1.64957746478873,\
           1.75267605633803,\
           1.85746478873239,\
           1.95380281690141,\
           2.05521126760563,\
           2.14478873239437])


nc   = xarray.open_dataset(fnames[0])
x    = np.array(nc["x"])
y    = np.array(nc["y"])
z    = np.array(nc["z"])
nz   = len(z)
dx   = x[1]-x[0]
dy   = y[1]-y[0]
xlen = x[-1]+dx/2
ylen = y[-1]+dy/2
p0_xsamp = [get_ind(x,2*xlen/8),get_ind(x,6*xlen/8),get_ind(x,2*xlen/8),get_ind(x,6*xlen/8)]
p0_ysamp = [get_ind(y,6*ylen/8),get_ind(y,4*ylen/8),get_ind(y,2*ylen/8),get_ind(y,0*ylen/8)]
p1_xsamp = [get_ind(x,4*ylen/8),get_ind(x,0*ylen/8),get_ind(x,4*ylen/8),get_ind(x,0*ylen/8)]
p1_ysamp = [get_ind(y,6*ylen/8),get_ind(y,4*ylen/8),get_ind(y,2*ylen/8),get_ind(y,0*ylen/8)]
p2_xsamp = [get_ind(x,2*xlen/8),get_ind(x,6*xlen/8),get_ind(x,2*xlen/8),get_ind(x,6*xlen/8)]
p2_ysamp = [get_ind(y,4*ylen/8),get_ind(y,2*ylen/8),get_ind(y,0*ylen/8),get_ind(y,6*ylen/8)]
p3_xsamp = [get_ind(x,4*xlen/8),get_ind(x,0*xlen/8),get_ind(x,4*xlen/8),get_ind(x,0*xlen/8)]
p3_ysamp = [get_ind(y,4*ylen/8),get_ind(y,2*ylen/8),get_ind(y,0*ylen/8),get_ind(y,6*ylen/8)]

# Compute error norms
for i in range(len(fnames)) :
  u0  = np.array([0. for k in range(nz)])
  u1  = np.array([0. for k in range(nz)])
  u2  = np.array([0. for k in range(nz)])
  u3  = np.array([0. for k in range(nz)])
  uw1 = np.array([0. for k in range(nz)])
  uw3 = np.array([0. for k in range(nz)])
  nc = xarray.open_dataset(fnames[i])
  for j in range(len(p0_xsamp)) :
    u0  += np.array(nc["avg_u"    ][:,p0_ysamp[j],p0_xsamp[j]])
    u1  += np.array(nc["avg_u"    ][:,p1_ysamp[j],p1_xsamp[j]])
    u2  += np.array(nc["avg_u"    ][:,p2_ysamp[j],p2_xsamp[j]])
    u3  += np.array(nc["avg_u"    ][:,p3_ysamp[j],p3_xsamp[j]])
    uw1 += np.array(nc["avg_up_wp"][:,p1_ysamp[j],p1_xsamp[j]])
    uw3 += np.array(nc["avg_up_wp"][:,p3_ysamp[j],p3_xsamp[j]])
  u0  /= len(p0_xsamp)
  u1  /= len(p0_xsamp)
  u2  /= len(p0_xsamp)
  u3  /= len(p0_xsamp)
  uw1 /= len(p0_xsamp)
  uw3 /= len(p0_xsamp)
  u0i  = np.interp(p0_y,z/.02,u0/10)
  u1i  = np.interp(p1_y,z/.02,u1/10)
  u2i  = np.interp(p2_y,z/.02,u2/10)
  u3i  = np.interp(p3_y,z/.02,u3/10)
  uw1i = np.interp(uw_p1_y,z/.02,-uw1)
  uw3i = np.interp(uw_p3_y,z/.02,-uw3)
  u0e  = np.sum(np.abs(p0_x-u0i))/len(p0_x)
  u1e  = np.sum(np.abs(p1_x-u1i))/len(p1_x)
  u2e  = np.sum(np.abs(p2_x-u2i))/len(p2_x)
  u3e  = np.sum(np.abs(p3_x-u3i))/len(p3_x)
  uw1e = np.sum(np.abs(uw_p1_x/10-uw1i))/len(p1_x)
  uw3e = np.sum(np.abs(uw_p3_x/10-uw3i))/len(p3_x)
  print((u0e+u1e+u2e+u3e+uw1e+uw3e)/6)

# Compute profiles to plot
u0  = np.array([0. for k in range(nz)])
u1  = np.array([0. for k in range(nz)])
u2  = np.array([0. for k in range(nz)])
u3  = np.array([0. for k in range(nz)])
uw1 = np.array([0. for k in range(nz)])
uw3 = np.array([0. for k in range(nz)])
for i in range(len(fnames)) :
  nc = xarray.open_dataset(fnames[i])
  for j in range(len(p0_xsamp)) :
    u0  += np.array(nc["avg_u"    ][:,p0_ysamp[j],p0_xsamp[j]])
    u1  += np.array(nc["avg_u"    ][:,p1_ysamp[j],p1_xsamp[j]])
    u2  += np.array(nc["avg_u"    ][:,p2_ysamp[j],p2_xsamp[j]])
    u3  += np.array(nc["avg_u"    ][:,p3_ysamp[j],p3_xsamp[j]])
    uw1 += np.array(nc["avg_up_wp"][:,p1_ysamp[j],p1_xsamp[j]])
    uw3 += np.array(nc["avg_up_wp"][:,p3_ysamp[j],p3_xsamp[j]])
u0  /= len(fnames)*len(p0_xsamp)
u1  /= len(fnames)*len(p0_xsamp)
u2  /= len(fnames)*len(p0_xsamp)
u3  /= len(fnames)*len(p0_xsamp)
uw1 /= len(fnames)*len(p0_xsamp)
uw3 /= len(fnames)*len(p0_xsamp)

fig,((ax1,ax2,ax3),(ax4,ax5,ax6)) = plt.subplots(2,3,sharey=True,figsize=(9,7.8))
ax1.plot(u0,z/.02,label=r"${\overline{u}(P_0)}$",color="black")
ax1.scatter(p0_x*10,p0_y,label="Experiment",facecolors='none',edgecolors='black')
ax1.set_xlim(-2,8)
ax1.set_ylim(0,3)
ax1.grid()
ax1.legend()
ax1.margins(0)

ax2.plot(u1,z/.02,label=r"${\overline{u}(P_1)}$",color="black")
ax2.scatter(p1_x*10,p1_y,label="Experiment",facecolors='none',edgecolors='black')
ax2.set_xlim(-2,8)
ax2.set_ylim(0,3)
ax2.grid()
ax2.legend()
ax2.margins(0)

ax3.plot(-uw1*10,z/.02,label=r"${\overline{u^\prime w^\prime}(P_1)}\times 10$",color="black")
ax3.scatter(uw_p1_x,uw_p1_y,label="Experiment",facecolors='none',edgecolors='black')
ax3.set_xlim(-2,10)
ax3.set_ylim(0,3)
ax3.grid()
ax3.legend()
ax3.margins(0)

ax4.plot(u2,z/.02,label=r"${\overline{u}(P_2)}$",color="black")
ax4.scatter(p2_x*10,p2_y,label="Experiment",facecolors='none',edgecolors='black')
ax4.set_xlim(-2,8)
ax4.set_ylim(0,3)
ax4.grid()
ax4.legend()
ax4.margins(0)

ax5.plot(u3,z/.02,label=r"${\overline{u}(P_3)}$",color="black")
ax5.scatter(p3_x*10,p3_y,label="Experiment",facecolors='none',edgecolors='black')
ax5.set_xlim(-2,8)
ax5.set_ylim(0,3)
ax5.grid()
ax5.legend()
ax5.margins(0)

ax6.plot(-uw3*10,z/.02,label=r"${\overline{u^\prime w^\prime}(P_3)}\times 10$",color="black")
ax6.scatter(uw_p3_x,uw_p3_y,label="Experiment",facecolors='none',edgecolors='black')
ax6.set_xlim(-2,10)
ax6.set_ylim(0,3)
ax6.grid()
ax6.legend()
ax6.margins(0)

fig.tight_layout()
plt.show()
plt.close()

